{"version":3,"sources":["ResourceButton.js","App.js","serviceWorker.js","index.js"],"names":["ResourceButton","props","inputId","concat","type","react","className","cx","disabled","active","onMouseDown","checked","id","name","readOnly","htmlFor","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_canvasRef","React","_deleteBtnRef","deleteRepeat","deleteCharacter","length","_deleteTimeout","setTimeout","handleDeleteClick","handleDeleteTouchStart","event","preventDefault","handleDeleteHoldEnd","clearTimeout","state","activeBtn","activeNumber","genQrCode","prevProps","prevState","current","ontouchstart","nextActiveNumber","substr","setState","num","nextActiveBtn","bwipjs","bcid","text","getQrCodeText","height","width","includetext","textxalign","err","cvs","style","maxWidth","ref","setActiveBtn","bind","handleNumpadClick","onMouseOut","onMouseUp","onTouchEnd","textIndent","Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5017728.chunk.js","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport cx from 'classnames';\n\ntype Props = {\n  active: boolean,\n  children?: React.Node,\n  className?: string,\n  onMouseDown: (event: SyntheticMouseEvent<HTMLElement>) => void,\n  type: string,\n};\n\nexport default function ResourceButton(props: Props) {\n  const inputId = `resource-type-${props.type}`;\n  return (\n    <button\n      className={cx('btn btn-rounded btn-sm', props.className)}\n      disabled={props.active}\n      onMouseDown={props.onMouseDown}\n      type=\"button\">\n      <div className=\"form-check\">\n        <input\n          checked={props.active}\n          className=\"form-check-input mr-1\"\n          id={inputId}\n          name=\"resource-type\"\n          readOnly\n          type=\"radio\"\n        />\n        <label className=\"form-check-label pr-2\" htmlFor={inputId}>\n          {props.children}\n        </label>\n      </div>\n    </button>\n  );\n}\n","/* @flow */\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as React from 'react';\nimport ResourceButton from './ResourceButton';\nimport bwipjs from 'bwip-js';\n\ntype Props = {};\n\ntype State = {\n  activeBtn: string,\n  activeNumber: string,\n};\n\nexport default class App extends React.Component<Props, State> {\n  _canvasRef = React.createRef<HTMLCanvasElement>();\n  _deleteBtnRef = React.createRef<HTMLButtonElement>();\n  _deleteTimeout: ?TimeoutID;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeBtn: 'BIN',\n      activeNumber: '',\n    };\n  }\n\n  componentDidMount() {\n    this.genQrCode();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    // Until React handles new Chrome functionality, `onTouchStart` must be bound to the real\n    // element in order for `preventDefault` to prevent clicks from firing.\n    //\n    // See: https://github.com/facebook/react/issues/9809#issuecomment-413978405\n    if (this._deleteBtnRef.current != null) {\n      // $FlowFixMe: Where is `ontouchstart`?\n      this._deleteBtnRef.current.ontouchstart = this.handleDeleteTouchStart;\n    }\n\n    if (\n      this.state.activeBtn !== prevState.activeBtn ||\n      this.state.activeNumber !== prevState.activeNumber\n    ) {\n      this.genQrCode();\n    }\n  }\n\n  deleteCharacter() {\n    // Can't delete if there's no number.\n    if (this.state.activeNumber.length === 0) return '';\n    const nextActiveNumber = this.state.activeNumber.substr(0, this.state.activeNumber.length - 1);\n    this.setState({\n      activeNumber: nextActiveNumber,\n    });\n    return nextActiveNumber;\n  }\n\n  deleteRepeat = () => {\n    const nextActiveNumber = this.deleteCharacter();\n    if (nextActiveNumber.length === 0) return;\n    this._deleteTimeout = setTimeout(this.deleteRepeat, 50);\n  };\n\n  getQrCodeText() {\n    return `${this.state.activeBtn}:${this.state.activeNumber}`;\n  }\n\n  handleNumpadClick(num: number) {\n    this.setState({\n      activeNumber: `${this.state.activeNumber}${num}`,\n    });\n  }\n\n  handleDeleteClick = () => {\n    const nextActiveNumber = this.deleteCharacter();\n    if (nextActiveNumber.length === 0) return;\n    this._deleteTimeout = setTimeout(this.deleteRepeat, 600);\n  };\n\n  handleDeleteTouchStart = (event: SyntheticTouchEvent<HTMLElement>) => {\n    event.preventDefault();\n    this.handleDeleteClick();\n  };\n\n  handleDeleteHoldEnd = () => {\n    if (this._deleteTimeout == null) return;\n    clearTimeout(this._deleteTimeout);\n    this._deleteTimeout = null;\n  };\n\n  setActiveBtn(nextActiveBtn: string) {\n    // Choosing a new type should also reset the number because there's little chance you want the\n    // same number for that other type.\n    this.setState({\n      activeBtn: nextActiveBtn,\n      activeNumber: '',\n    });\n  }\n\n  genQrCode() {\n    bwipjs(\n      this._canvasRef.current,\n      {\n        bcid: 'qrcode', // Barcode type\n        text: this.getQrCodeText(), // Text to encode\n        height: 40, // Bar height, in millimeters\n        width: 40,\n        includetext: true, // Show human-readable text\n        textxalign: 'center', // Always good to set this\n      },\n      function(err, cvs) {\n        if (err) {\n          // Decide how to handle the error\n          // `err` may be a string or Error object\n        } else {\n          // Nothing else to do in this example...\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container text-center\" style={{ maxWidth: '540px' }}>\n        <canvas className=\"mt-3\" ref={this._canvasRef} />\n        <h5 className=\"mt-2\">\n          <pre className=\"mb-0\">\n            {this.getQrCodeText()}\n            <span className=\"cursor\" />\n          </pre>\n        </h5>\n        <div className=\"row\">\n          <div className=\"col my-1\">\n            <ResourceButton\n              active={this.state.activeBtn === 'BIN'}\n              className=\"btn-danger\"\n              onMouseDown={this.setActiveBtn.bind(this, 'BIN')}\n              type=\"BIN\">\n              BIN\n            </ResourceButton>\n          </div>\n          <div className=\"col my-1\">\n            <ResourceButton\n              active={this.state.activeBtn === 'CASE'}\n              className=\"btn-secondary\"\n              onMouseDown={this.setActiveBtn.bind(this, 'CASE')}\n              type=\"CASE\">\n              CASE\n            </ResourceButton>\n          </div>\n          <div className=\"col my-1\">\n            <ResourceButton\n              active={this.state.activeBtn === 'TRAY'}\n              className=\"btn-primary\"\n              onMouseDown={this.setActiveBtn.bind(this, 'TRAY')}\n              type=\"TRAY\">\n              TRAY\n            </ResourceButton>\n          </div>\n          <div className=\"col my-1\">\n            <ResourceButton\n              active={this.state.activeBtn === 'STATION'}\n              className=\"btn-success\"\n              onMouseDown={this.setActiveBtn.bind(this, 'STATION')}\n              type=\"STATION\">\n              STATION\n            </ResourceButton>\n          </div>\n          <div className=\"col my-1\">\n            <ResourceButton\n              active={this.state.activeBtn === 'CROP'}\n              className=\"btn-warning\"\n              onMouseDown={this.setActiveBtn.bind(this, 'CROP')}\n              type=\"CROP\">\n              CROP\n            </ResourceButton>\n          </div>\n        </div>\n        <div className=\"mt-3 mx-auto\" style={{ width: '240px' }}>\n          <div className=\"row\">\n            <div className=\"col\">\n              <button\n                className=\"btn btn-dark btn-round btn-lg\"\n                onMouseDown={this.handleNumpadClick.bind(this, 1)}>\n                1\n              </button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"btn btn-dark btn-round btn-lg\"\n                onMouseDown={this.handleNumpadClick.bind(this, 2)}>\n                2\n              </button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"btn btn-dark btn-round btn-lg\"\n                onMouseDown={this.handleNumpadClick.bind(this, 3)}>\n                3\n              </button>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col\">\n              <button\n                className=\"btn btn-dark btn-round btn-lg\"\n                onMouseDown={this.handleNumpadClick.bind(this, 4)}>\n                4\n              </button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"btn btn-dark btn-round btn-lg\"\n                onMouseDown={this.handleNumpadClick.bind(this, 5)}>\n                5\n              </button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"btn btn-dark btn-round btn-lg\"\n                onMouseDown={this.handleNumpadClick.bind(this, 6)}>\n                6\n              </button>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col\">\n              <button\n                className=\"btn btn-dark btn-round btn-lg\"\n                onMouseDown={this.handleNumpadClick.bind(this, 7)}>\n                7\n              </button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"btn btn-dark btn-round btn-lg\"\n                onMouseDown={this.handleNumpadClick.bind(this, 8)}>\n                8\n              </button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"btn btn-dark btn-round btn-lg\"\n                onMouseDown={this.handleNumpadClick.bind(this, 9)}>\n                9\n              </button>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col\" />\n            <div className=\"col\">\n              <button\n                className=\"btn btn-dark btn-round btn-lg\"\n                onMouseDown={this.handleNumpadClick.bind(this, 0)}>\n                0\n              </button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"btn btn-dark btn-round btn-lg\"\n                disabled={this.state.activeNumber === ''}\n                onMouseDown={this.handleDeleteClick}\n                onMouseOut={this.handleDeleteHoldEnd}\n                onMouseUp={this.handleDeleteHoldEnd}\n                onTouchEnd={this.handleDeleteHoldEnd}\n                ref={this._deleteBtnRef}\n                style={{ textIndent: '-3px' }}>\n                ⌫\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}